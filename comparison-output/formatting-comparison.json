{
  "original": {
    "label": "Original PDF",
    "totalLength": 38567,
    "fontSizes": [
      21,
      18,
      17,
      15,
      13,
      10
    ],
    "colors": [
      "#000000",
      "#ff0000"
    ],
    "elementCount": 173,
    "positioning": {
      "count": 173,
      "topRange": {
        "min": 109,
        "max": 1056
      },
      "leftRange": {
        "min": 135,
        "max": 729
      }
    },
    "textContent": "PDF Content Extraction body { font-family: 'Times New Roman', serif; margin: 20px; background-color: #ffffff; color: #000000; line-height: 1.2; } .content-container { max-width: 800px; margin: 0 auto; background: white; position: relative; } /* Preserve exact positioning and styling from original PDF */ p { margin: 0; padding: 0; } /* Table styling */ table { border-collapse: collapse; margin: 20px 0; width: 100%; } th, td { border: 1px solid #000; padding: 8px; text-align: left; font-size: 12px; } th { background-color: #f0f0f0; font-weight: bold; } .section-header { font-size: 18px; font-weight: bold; margin: 20px 0 10px 0; color: #333; } üìÑ Extracted PDF Content Microsoft Word - midterm-f21.docx CSCI-UA.0480-051:&#160;Parallel&#160;Computing&#160; Midterm&#160;Exam&#160;(Oct&#160;19 th ,&#160;2021)&#160;&#160; Total:&#160;100&#160;points&#160; &#160; Important&#160;Notes-&#160; READ&#160;BEFORE&#160;SOLVING&#160;THE&#160;EXAM&#160; &#160; &#160; ÔÇ∑ &#160; If&#160;you&#160;perceive&#160;any&#160;ambiguity&#160;in&#160;any&#160;of&#160;the&#160;questions,&#160;state&#160;your&#160;assumptions&#160;clearly&#160; and&#160;&#160;solve&#160;&#160;the&#160;&#160;problem&#160;&#160;based&#160;&#160;on&#160;&#160;your&#160;&#160;assumptions.&#160;&#160;We&#160;&#160;will&#160;&#160;grade&#160;&#160;both&#160;&#160;your&#160; solutions&#160;and&#160;your&#160;assumptions.&#160; ÔÇ∑ &#160; This&#160;exam&#160;is&#160;take-home.&#160; ÔÇ∑ &#160; The&#160;exam&#160;is&#160;posted,&#160;on&#160;Brightspace,&#160;at&#160;the&#160;beginning&#160;of&#160;the&#160;Oct&#160;19 th &#160;&#160;lecture.&#160; ÔÇ∑ &#160; You&#160;have&#160;up&#160;to&#160;23&#160;hours&#160;and&#160;55&#160;minutes&#160;from&#160;the&#160;beginning&#160;of&#160;the&#160;Oct&#160;19 th &#160;lecture&#160; to&#160;submit&#160;on&#160;Brightspace&#160;&#160;(in&#160;the&#160;assignments&#160;section).&#160; ÔÇ∑ &#160; You&#160;are&#160;allowed&#160;only&#160;one&#160;submission,&#160;unlike&#160;assignments&#160;and&#160;labs.&#160; ÔÇ∑ &#160; Your&#160;answers&#160;must&#160;be&#160;very&#160;focused.&#160;You&#160;may&#160;be&#160;penalized&#160;for&#160;wrong&#160;answers&#160;and&#160; for&#160;putting&#160;irrelevant&#160;information&#160;in&#160;your&#160;answers.&#160;&#160; ÔÇ∑ &#160; You&#160;must&#160;upload&#160;a&#160;pdf&#160;file.&#160;&#160; ÔÇ∑ &#160; Your&#160;&#160;answer&#160;&#160;sheet&#160;must&#160;&#160;have&#160;&#160;a&#160;&#160;cover&#160;&#160;page&#160;&#160;(as&#160;&#160;indicated&#160;&#160;below)&#160;&#160;and&#160;&#160;one&#160;&#160;problem&#160; answer&#160;&#160;per&#160;&#160;page&#160;&#160;(e.g.&#160;&#160;problem&#160;&#160;1&#160;&#160;in&#160;&#160;separate&#160;&#160;page,&#160;&#160;problem&#160;&#160;2&#160;&#160;in&#160;&#160;another&#160;&#160;separate&#160; page,&#160;etc).&#160;&#160; ÔÇ∑ &#160; This&#160;exam&#160;has&#160;4&#160;problems&#160;totaling&#160;100&#160;points.&#160;&#160; ÔÇ∑ &#160; The&#160;very&#160;first&#160;page&#160;of&#160;your&#160;answer&#160;is&#160;the&#160;cover&#160;page&#160;and&#160;must&#160;contain:&#160; - &#160; You&#160;Last&#160;Name&#160; - &#160; Your&#160;First&#160;Name&#160; - &#160; Your&#160;NetID&#160; - &#160; Copy&#160;and&#160;paste&#160;the&#160;honor&#160;code&#160;showed&#160;in&#160;the&#160;rectangle&#160;at&#160;the&#160;bottom&#160;of&#160;this&#160; page.&#160; &#160; Honor&#160;code&#160;(copy&#160;and&#160;paste,&#160;what&#160;is&#160;type&#160;in&#160;red&#160;below,&#160;to&#160;the&#160;first&#160;page&#160;of&#160;your&#160;exam)&#160; &#160; ÔÇ∑ &#160; You&#160;may&#160;use&#160;the&#160;textbook,&#160;slides,&#160;and&#160;any&#160;notes&#160;you&#160;have.&#160;But&#160;you&#160;may&#160;not&#160;use&#160;the&#160; internet.&#160; ÔÇ∑ &#160; You&#160;may&#160;NOT&#160;use&#160;communication&#160;tools&#160;to&#160;collaborate&#160;with&#160;other&#160;humans.&#160;This&#160;includes&#160; but&#160;is&#160;not&#160;limited&#160;to&#160;G-Chat,&#160;Messenger,&#160;E-mail,&#160;etc.&#160; ÔÇ∑ &#160; Do&#160;not&#160;try&#160;to&#160;search&#160;for&#160;answers&#160;on&#160;the&#160;internet&#160;it&#160;will&#160;show&#160;in&#160;your&#160;answer,&#160;and&#160;you&#160;will&#160; earn&#160;an&#160;immediate&#160;grade&#160;of&#160;0.&#160; ÔÇ∑ &#160; Anyone&#160;found&#160;sharing&#160;answers&#160;or&#160;communicating&#160;with&#160;another&#160;student&#160;during&#160;the&#160;exam&#160; period&#160;will&#160;earn&#160;an&#160;immediate&#160;grade&#160;of&#160;0.&#160; ÔÇ∑ &#160; ‚ÄúI&#160;understand&#160;the&#160;ground&#160;rules&#160;and&#160;agree&#160;to&#160;abide&#160;by&#160;them.&#160;I&#160;will&#160;not&#160;share&#160;answers&#160; or&#160;assist&#160;another&#160;student&#160;during&#160;this&#160;exam,&#160;nor&#160;will&#160;I&#160;seek&#160;assistance&#160;from&#160;another&#160; student&#160;or&#160;attempt&#160;to&#160;view&#160;their&#160;answers.‚Äù&#160; &#160; &#160; &#160; &#160; Problem&#160;1&#160; &#160; Assume&#160;we&#160;have&#160;the&#160;following&#160;task&#160;flow&#160;graph&#160;where&#160;every&#160;node&#160;is&#160;a&#160;task&#160;and&#160;an&#160;arrow&#160; from&#160;a&#160;task&#160;to&#160;another&#160;means&#160;dependencies.&#160;For&#160;example,&#160;task&#160;b&#160;cannot&#160;start&#160;before&#160;task&#160;a&#160; is&#160;done.&#160; &#160; &#160; Suppose&#160;we&#160;have&#160;two&#160;types&#160;of&#160;cores:&#160;type&#160;1&#160;and&#160;type&#160;2.&#160;The&#160;following&#160;table&#160;shows&#160;the&#160; time&#160;taken&#160;by&#160;each&#160;task,&#160;in&#160;nano&#160;seconds,&#160;if&#160;executed&#160;on&#160;a&#160;core&#160;of&#160;type&#160;1&#160;and&#160;if&#160;executed&#160; on&#160;a&#160;core&#160;of&#160;type&#160;2.&#160; &#160; Task&#160; Time&#160;Taken&#160;on&#160; core&#160;type&#160;1 &#160; Time&#160;Taken&#160;on&#160; core&#160;type&#160;2 &#160; a&#160; 5&#160; 5&#160; b&#160; 10&#160; 5&#160; c&#160; 15&#160; 20&#160; d&#160; 5&#160; 5&#160; e&#160; 10&#160; 5&#160; &#160; a.&#160;[5&#160;points]&#160;If&#160;we&#160;use&#160;all&#160;cores&#160;of&#160;type&#160;1,&#160;what&#160;will&#160;be&#160;the&#160;span&#160;(indicate&#160;tasks&#160;and&#160;total&#160; time)&#160;of&#160;the&#160;DAG?&#160;&#160; &#160; b.&#160;[5]&#160;If&#160;we&#160;use&#160;all&#160;cores&#160;of&#160;type&#160;2,&#160;what&#160;will&#160;be&#160;the&#160;span&#160;(indicate&#160;tasks&#160;and&#160;total&#160;time)&#160;of&#160; the&#160;DAG?&#160;&#160; &#160; c.&#160;[15]&#160;What&#160;will&#160;be&#160;the&#160;smallest&#160;number&#160;of&#160;cores,&#160;of&#160;any&#160;type,&#160;that&#160;gives&#160;the&#160;best&#160;speedup&#160;&#160; compared&#160;to&#160;using&#160;a&#160;single&#160;core&#160;of&#160;type&#160;1?&#160;You&#160;can&#160;use&#160;a&#160;mix&#160;of&#160;any&#160;cores&#160;(e.g.&#160;two&#160;cores&#160; of&#160;type&#160;1&#160;and&#160;one&#160;core&#160;of&#160;type&#160;2,&#160;etc).&#160;In&#160;your&#160;solution,&#160;indicate&#160;which&#160;task&#160;will&#160;run&#160;on&#160; which&#160;core,&#160;the&#160;total&#160;number&#160;of&#160;cores&#160;you&#160;will&#160;use&#160;for&#160;each&#160;type,&#160;the&#160;total&#160;execution&#160;times&#160; (for&#160;&#160;parallel&#160;&#160;version&#160;&#160;and&#160;&#160;the&#160;&#160;sequential&#160;&#160;version&#160;&#160;running&#160;&#160;on&#160;&#160;core&#160;&#160;of&#160;&#160;type&#160;&#160;1),&#160;&#160;and&#160;&#160;the&#160; speedup&#160;(relative&#160;to&#160;sequential&#160;execution&#160;on&#160;core&#160;of&#160;type&#160;1).&#160; &#160; d.&#160;[10]&#160;Suppose&#160;we&#160;use&#160;only&#160;cores&#160;of&#160;type&#160;1.&#160;What&#160;is&#160;the&#160;smallest&#160;number&#160;of&#160;cores&#160;to&#160;get&#160; the&#160;highest&#160;speedup?&#160;Calculate&#160;that&#160;speedup.&#160;Then,&#160;if&#160;you&#160;are&#160;allowed&#160;to&#160;remove&#160;only&#160;one&#160; arrow&#160;from&#160;the&#160;DAG,&#160;while&#160;keeping&#160;the&#160;DAG&#160;a&#160;legal&#160;one,&#160;what&#160;will&#160;be&#160;that&#160;arrow&#160;to&#160;give&#160; a&#160;better&#160;speedup&#160;than&#160;the&#160;one&#160;you&#160;just&#160;calculated?&#160;If&#160;there&#160;are&#160;several&#160;solutions,&#160;pick&#160;one&#160; solution,&#160;and&#160;calculate&#160;the&#160;new&#160;speedup.&#160;If&#160;there&#160;are&#160;no&#160;solutions,&#160;state&#160;so,&#160;and&#160;give&#160;no&#160; more&#160;than&#160;two&#160;lines&#160;of&#160;explanation&#160;as&#160;to&#160;why&#160;there&#160;is&#160;no&#160;solution.&#160; &#160; &#160; Problem&#160;2 &#160; &#160; a.&#160;[5]&#160;For&#160;each&#160;one&#160;of&#160;the&#160;following&#160;designs,&#160;indicate&#160;whether&#160;it&#160;is&#160;SISD,&#160;SIMD,&#160;MISD,&#160; or&#160;MIMD.&#160;No&#160;justification&#160;needed.&#160;Note:&#160;If&#160;the&#160;design&#160;fits&#160;more&#160;than&#160;one&#160;category,&#160;then&#160; pick&#160;the&#160;more&#160;general&#160;one.&#160;For&#160;example,&#160;MIMD&#160;can&#160;execute&#160;as&#160;SIMD&#160;if&#160;all&#160;the&#160; instructions&#160;are&#160;the&#160;same.&#160;The&#160;more&#160;general&#160;is&#160;MIMD&#160;so&#160;pick&#160;MIMD&#160;not&#160;SIMD.&#160;&#160; 1. &#160; single&#160;core&#160;with&#160;superscalar&#160;capability&#160;but&#160;without&#160;speculative&#160;execution&#160;and&#160; without&#160;hyperthreading&#160;technology&#160; 2. &#160; single&#160;core&#160;with&#160;superscalar&#160;capability&#160;and&#160;speculative&#160;execution&#160;but&#160;without&#160; hyperthreading&#160;technology&#160; 3. &#160; single&#160;core&#160;with&#160;superscalar&#160;capability,&#160;speculative&#160;execution,&#160;and&#160;hyperthreading&#160; technology&#160; 4. &#160; multicore&#160;chip&#160;where&#160;each&#160;core&#160;has&#160;pipelining&#160;only&#160; 5. &#160; multicore&#160;chip&#160;where&#160;some&#160;cores&#160;have&#160;pipelining&#160;only&#160;while&#160;other&#160;cores&#160;have&#160; superscalar&#160;capability&#160;without&#160;hyperthreading&#160;technology&#160; &#160; &#160; b.&#160;&#160;[5]&#160;&#160;Indicate&#160;&#160;whether&#160;&#160;each&#160;&#160;statement&#160;&#160;below&#160;&#160;is&#160;&#160;true&#160;&#160;(T)&#160;&#160;or&#160;&#160;false&#160;&#160;(F).&#160;&#160;No&#160;&#160;justification&#160; needed.&#160; 1. &#160; We&#160;can&#160;have&#160;a&#160;core&#160;with&#160;superscalar&#160;capability&#160;but&#160;without&#160;speculative&#160;execution.&#160; 2. &#160; In&#160;&#160;a&#160;&#160;core&#160;&#160;with&#160;&#160;hyperthreading&#160;&#160;technology,&#160;&#160;instructions&#160;&#160;can&#160;&#160;come&#160;&#160;from&#160;&#160;different&#160; threads&#160;belonging&#160;to&#160;the&#160;same&#160;process&#160;but&#160;not&#160;from&#160;threads&#160;belonging&#160;to&#160;different&#160; processes.&#160; 3. &#160; MISD&#160;is&#160;implemented&#160;in&#160;real&#160;life&#160;in&#160;GPUs&#160;even&#160;though&#160;multicore&#160;can&#160;do&#160;the&#160;same&#160; job.&#160; 4. &#160; If&#160;we&#160;have&#160;two&#160;processes,&#160;with&#160;one&#160;thread&#160;each,&#160;executing&#160;on&#160;a&#160;shared&#160;memory&#160; machine,&#160;there&#160;is&#160;no&#160;coherence&#160;overhead&#160;that&#160;can&#160;result&#160;from&#160;their&#160;execution.&#160; 5. &#160; If&#160;&#160;we&#160;&#160;have&#160;&#160;two&#160;&#160;processes,&#160;&#160;with&#160;&#160;multiple&#160;&#160;threads&#160;&#160;each,&#160;&#160;executing&#160;&#160;on&#160;&#160;a&#160;&#160;shared&#160; memory&#160;&#160;machine,&#160;&#160;there&#160;&#160;is&#160;&#160;no&#160;&#160;coherence&#160;&#160;overhead&#160;&#160;that&#160;&#160;can&#160;&#160;result&#160;&#160;from&#160;&#160;their&#160; execution.&#160; &#160; c.&#160;&#160;[5]&#160;&#160;If&#160;&#160;we&#160;&#160;have&#160;&#160;a&#160;&#160;multicore&#160;&#160;processor&#160;&#160;with&#160;&#160;eight&#160;&#160;cores,&#160;&#160;and&#160;&#160;two-way&#160;&#160;hyperthreading&#160; each,&#160;what&#160;is&#160;the&#160;largest&#160;number&#160;of&#160; processes &#160;that&#160;can&#160;execute&#160; at&#160;the&#160;same&#160;time ?&#160;Explain&#160; your&#160;answer&#160;with&#160;no&#160;more&#160;than&#160;two&#160;sentences.&#160; &#160; &#160; &#160; Problem&#160;3&#160; &#160; a.&#160;Suppose&#160;you&#160;have&#160;an&#160;algorithm&#160;with&#160;four&#160;tasks&#160;that&#160;can&#160;be&#160;executed&#160;in&#160;parallel.&#160;&#160; 1. &#160; [6]&#160;&#160;What&#160;&#160;are&#160;&#160;the&#160;&#160;characteristics&#160;&#160;of&#160;&#160;those&#160;&#160;tasks&#160;&#160;that&#160;&#160;can&#160;&#160;make&#160;&#160;you&#160;&#160;decide&#160;&#160;to&#160; implement&#160;&#160;the&#160;&#160;program&#160;&#160;as&#160;&#160;one&#160;&#160;process&#160;&#160;with&#160;&#160;four&#160;&#160;threads&#160;&#160;as&#160;&#160;opposed&#160;&#160;to&#160;&#160;four&#160; processes&#160;with&#160;one&#160;thread&#160;each?&#160;State&#160;two&#160;characteristics&#160;to&#160;get&#160;full&#160;credit.&#160; 2. &#160; [4]&#160;With&#160;four&#160;parallel&#160;tasks,&#160;it&#160;may&#160;seem&#160;that&#160;four&#160;cores&#160;will&#160;give&#160;the&#160;best&#160;speedup&#160; over&#160;sequential&#160;code.&#160;However,&#160;there&#160;may&#160;be&#160;cases&#160;where&#160;less&#160;than&#160;four&#160;cores&#160;can&#160; give&#160;the&#160;same&#160;speedup&#160;as&#160;the&#160;four&#160;cores.&#160;Give&#160;a&#160;brief&#160;description&#160;of&#160;such&#160;a&#160;case&#160;in&#160; no&#160;more&#160;than&#160;2-3&#160;lines.&#160;&#160; &#160; b.&#160;&#160;[4]&#160;&#160;If&#160;&#160;we&#160;&#160;have&#160;&#160;two&#160;&#160;implementations&#160;&#160;of&#160;&#160;the&#160;&#160;same&#160;&#160;algorithm&#160;&#160;and&#160;&#160;we&#160;&#160;found&#160;&#160;that&#160;&#160;one&#160; implementation&#160;&#160;has&#160;&#160;higher&#160;&#160;efficiency&#160;&#160;than&#160;&#160;the&#160;&#160;other.&#160;&#160;Does&#160;&#160;that&#160;&#160;always&#160;&#160;mean&#160;&#160;that&#160;&#160;the&#160; implementation&#160;with&#160;higher&#160;efficiency&#160;will&#160;always&#160;be&#160;faster?&#160;Justify&#160;in&#160;two&#160;sentences.&#160; &#160; c.&#160;&#160;We&#160;&#160;have&#160;&#160;two&#160;&#160;different&#160;&#160;implementations&#160;&#160;of&#160;&#160;the&#160;&#160;same&#160;&#160;algorithm.&#160;&#160;The&#160;&#160;first&#160; implementation&#160;&#160;has&#160;&#160;one&#160;&#160;million&#160;&#160;instructions&#160;&#160;where&#160;&#160;half&#160;&#160;of&#160;&#160;them&#160;&#160;are&#160;&#160;floating&#160;&#160;point&#160; instructions,&#160;and&#160;the&#160;other&#160;&#160;half&#160;are&#160;integer&#160;instructions.&#160;The&#160;second&#160;implementation&#160;has&#160; two&#160;&#160;million&#160;&#160;instructions&#160;&#160;where&#160;&#160;all&#160;&#160;of&#160;&#160;them&#160;&#160;are&#160;integer&#160;instructions.&#160;&#160;Suppose&#160;&#160;a&#160;&#160;floating- point&#160;instruction&#160;takes&#160;10&#160;cycles&#160;while&#160;an&#160;integer&#160;instruction&#160;takes&#160;one&#160;cycle.&#160;We&#160;execute&#160; these&#160;two&#160;implementations&#160;on&#160;a&#160;2GHz&#160;machine.&#160;Assume&#160;single&#160;core&#160;processor,&#160;where&#160;this&#160; core&#160;is&#160;SISD.&#160; 1. &#160; [6]&#160;What&#160;is&#160;the&#160;MIPS&#160;of&#160;each&#160;implementation?&#160; 2. &#160; [6]&#160;What&#160;is&#160;the&#160;CPI&#160;of&#160;each&#160;implementation?&#160; 3. &#160; [6]&#160;What&#160;is&#160;the&#160;total&#160;execution&#160;time&#160;of&#160;each&#160;implementation?&#160; 4. &#160; [8]&#160;&#160;State&#160;&#160;which&#160;&#160;implementation&#160;&#160;is&#160;&#160;better&#160;&#160;based&#160;&#160;on&#160;&#160;each&#160;&#160;of&#160;&#160;the&#160;&#160;following&#160; measurements:&#160;instruction&#160;count,&#160;MIPS,&#160;CPI,&#160;and&#160;execution&#160;time.&#160; &#160; &#160; &#160; &#160; &#160; &#160; Problem&#160;4&#160; &#160; For&#160;problem&#160;4,&#160;assume&#160;we&#160;have&#160;one&#160;communicator:&#160;MPI_COMM_WORLD.&#160; Suppose&#160;we&#160;have&#160;four&#160;processes.&#160;Each&#160;process&#160;has&#160;two&#160;arrays,&#160;of&#160;five&#160;integers&#160;each,&#160;A&#160; and&#160;B.&#160;&#160;B&#160;is&#160;declared&#160;as&#160;int&#160;B[5]&#160;but&#160;is&#160;not&#160;initialized&#160;and&#160;A&#160;is&#160;initialized&#160;as&#160;follows:&#160; process&#160;0:&#160;int&#160;A[5]&#160;=&#160;{1,&#160;2,&#160;3,&#160;4,&#160;5};&#160; process&#160;1:&#160;int&#160;A[5]&#160;=&#160;{11,&#160;12,&#160;13,&#160;14,&#160;15};&#160; process&#160;2:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10};&#160; process&#160;3:&#160;int&#160;A[5]&#160;=&#160;{16,&#160;17,&#160;18,&#160;19,&#160;20};&#160; &#160; a.&#160;[3]&#160;Write&#160;one&#160;MPI&#160;command&#160;that,&#160;if&#160;executed&#160;by&#160;all&#160;the&#160;four&#160;processes,&#160;the&#160;B&#160;arrays&#160;at&#160; each&#160;process&#160;will&#160;be:&#160; process&#160;0:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50};&#160; process&#160;1:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50};&#160; process&#160;2:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50};&#160; process&#160;3:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50};&#160; &#160; b.&#160;[3]&#160;Write&#160;one&#160;MPI&#160;command&#160;that,&#160;if&#160;executed&#160;by&#160;all&#160;the&#160;four&#160;processes,&#160;the&#160;A&#160;arrays&#160;at&#160; each&#160;process&#160;will&#160;be:&#160; process&#160;0:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10};&#160; process&#160;1:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10};&#160; process&#160;2:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10};&#160; process&#160;3:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10};&#160; &#160; c.&#160;&#160;[4]&#160;&#160;Why&#160;&#160;MPI_Bcast()&#160;&#160;does&#160;&#160;not&#160;&#160;have&#160;&#160;an&#160;&#160;argument&#160;&#160;for&#160;&#160;the&#160;&#160;tag&#160;&#160;in&#160;&#160;a&#160;&#160;way&#160;&#160;similar&#160;&#160;to&#160; MPI_send()?&#160;&#160; Table structure not supported"
  },
  "generated": {
    "label": "Generated PDF",
    "totalLength": 27923,
    "fontSizes": [
      26,
      18,
      15
    ],
    "colors": [
      "#000000"
    ],
    "elementCount": 102,
    "positioning": {
      "count": 102,
      "topRange": {
        "min": 56,
        "max": 1049
      },
      "leftRange": {
        "min": 108,
        "max": 801
      }
    },
    "textContent": "comparison-output/generated-pdf-1751418371478 1 CSCI-UA.0480-051:&#160;Parallel&#160;Computing Midterm&#160;Exam&#160;(Oct&#160;19th,&#160;2021) Total:&#160;100&#160;points Important&#160;Notes-&#160;READ&#160;BEFORE&#160;SOLVING&#160;THE&#160;EXAM This&#160;exam&#160;is&#160;take-home. The&#160;exam&#160;is&#160;posted,&#160;on&#160;Brightspace,&#160;at&#160;the&#160;beginning&#160;of&#160;the&#160;Oct&#160;19th&#160;lecture. You&#160;have&#160;up&#160;to&#160;23&#160;hours&#160;and&#160;55&#160;minutes&#160;from&#160;the&#160;beginning&#160;of&#160;the&#160;Oct&#160;19&#160;th&#160;lecture 4.&#160;multicore&#160;chip&#160;where&#160;each&#160;core&#160;has&#160;pipelining&#160;only You&#160;are&#160;allowed&#160;only&#160;one&#160;submission,&#160;unlike&#160;assignments&#160;and&#160;labs. You&#160;must&#160;upload&#160;a&#160;pdf&#160;file. 1.&#160;We&#160;can&#160;have&#160;a&#160;core&#160;with&#160;superscalar&#160;capability&#160;but&#160;without&#160;speculative&#160;execution. This&#160;exam&#160;has&#160;4&#160;problems&#160;totaling&#160;100&#160;points. The&#160;very&#160;first&#160;page&#160;of&#160;your&#160;answer&#160;is&#160;the&#160;cover&#160;page&#160;and&#160;must&#160;contain: 1.&#160;[6]&#160;What&#160;is&#160;the&#160;MIPS&#160;of&#160;each&#160;implementation? 2.&#160;[6]&#160;What&#160;is&#160;the&#160;CPI&#160;of&#160;each&#160;implementation? 3.&#160;[6]&#160;What&#160;is&#160;the&#160;total&#160;execution&#160;time&#160;of&#160;each&#160;implementation? each,&#160;what&#160;is&#160;the&#160;largest&#160;number&#160;of&#160;processes&#160;that&#160;can&#160;execute&#160;at&#160;the&#160;same&#160;time?&#160;Explain ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ If&#160;you&#160;perceive&#160;any&#160;ambiguity&#160;in&#160;any&#160;of&#160;the&#160;questions,&#160;state your&#160;assumptions&#160;clearly 2 and&#160;solve&#160;the&#160;problem&#160;based&#160;on&#160;your&#160;assumptions.&#160;We will&#160;grade&#160;both&#160;your solutions&#160;and&#160;your&#160;assumptions. to&#160;submit&#160;on&#160;Brightspace&#160;(in&#160;the&#160;assignments&#160;section). Your&#160;answers&#160;must&#160;be&#160;very&#160;focused.&#160;You&#160;may&#160;be&#160;penalized for&#160;wrong&#160;answers&#160;and for&#160;putting&#160;irrelevant&#160;information&#160;in&#160;your&#160;answers. Your&#160;answer&#160;sheet&#160;must&#160;have&#160;a&#160;cover&#160;page&#160;(as&#160;indicated below)&#160;and&#160;one&#160;problem answer&#160;per&#160;page&#160;(e.g.&#160;problem&#160;1&#160;in&#160;separate&#160;page,&#160;problem 2&#160;in&#160;another&#160;separate page,&#160;etc). -&#160;You&#160;Last&#160;Name -&#160;Your&#160;First&#160;Name -&#160;Your&#160;NetID -&#160;Copy&#160;and&#160;paste&#160;the&#160;honor&#160;code&#160;showed&#160;in&#160;the&#160;rectangle at&#160;the&#160;bottom&#160;of&#160;this page. Honor&#160;code&#160;(copy&#160;and&#160;paste,&#160;what&#160;is&#160;type&#160;in&#160;red&#160;below,&#160;to the&#160;first&#160;page&#160;of&#160;your&#160;exam) ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ ‚Ä¢ You&#160;may&#160;use&#160;the&#160;textbook,&#160;slides,&#160;and&#160;any&#160;notes&#160;you&#160;have. But&#160;you&#160;may&#160;not&#160;use&#160;the 3 internet. You&#160;may&#160;NOT&#160;use&#160;communication&#160;tools&#160;to&#160;collaborate with&#160;other&#160;humans.&#160;This&#160;includes but&#160;is&#160;not&#160;limited&#160;to&#160;G-Chat,&#160;Messenger,&#160;E-mail,&#160;etc. Do&#160;not&#160;try&#160;to&#160;search&#160;for&#160;answers&#160;on&#160;the&#160;internet&#160;it&#160;will show&#160;in&#160;your&#160;answer,&#160;and&#160;you&#160;will earn&#160;an&#160;immediate&#160;grade&#160;of&#160;0. Anyone&#160;found&#160;sharing&#160;answers&#160;or&#160;communicating&#160;with&#160;an- other&#160;student&#160;during&#160;the&#160;exam period&#160;will&#160;earn&#160;an&#160;immediate&#160;grade&#160;of&#160;0. &#34;I&#160;understand&#160;the&#160;ground&#160;rules&#160;and&#160;agree&#160;to&#160;abide&#160;by them.&#160;I&#160;will&#160;not&#160;share&#160;answers or&#160;assist&#160;another&#160;student&#160;during&#160;this&#160;exam,&#160;nor&#160;will&#160;I&#160;seek assistance&#160;from&#160;another student&#160;or&#160;attempt&#160;to&#160;view&#160;their&#160;answers.&#34; Problem&#160;1 Assume&#160;we&#160;have&#160;the&#160;following&#160;task&#160;flow&#160;graph&#160;where&#160;every node&#160;is&#160;a&#160;task&#160;and&#160;an&#160;arrow from&#160;a&#160;task&#160;to&#160;another&#160;means&#160;dependencies.&#160;For&#160;example, task&#160;b&#160;cannot&#160;start&#160;before&#160;task&#160;a is&#160;done. Suppose&#160;we&#160;have&#160;two&#160;types&#160;of&#160;cores:&#160;type&#160;1&#160;and&#160;type&#160;2. The&#160;following&#160;table&#160;shows&#160;the time&#160;taken&#160;by&#160;each&#160;task,&#160;in&#160;nano&#160;seconds,&#160;if&#160;executed&#160;on a&#160;core&#160;of&#160;type&#160;1&#160;and&#160;if&#160;executed on&#160;a&#160;core&#160;of&#160;type&#160;2. Task 4 Time&#160;Taken&#160;on core&#160;type&#160;1 Time&#160;Taken&#160;on core&#160;type&#160;2 a b c d e 5 10 15 5 10 5 5 20 5 5 a.&#160;[5&#160;points]&#160;If&#160;we&#160;use&#160;all&#160;cores&#160;of&#160;type&#160;1,&#160;what&#160;will&#160;be&#160;the span&#160;(indicate&#160;tasks&#160;and&#160;total time)&#160;of&#160;the&#160;DAG? b.&#160;[5]&#160;If&#160;we&#160;use&#160;all&#160;cores&#160;of&#160;type&#160;2,&#160;what&#160;will&#160;be&#160;the&#160;span (indicate&#160;tasks&#160;and&#160;total&#160;time)&#160;of the&#160;DAG? c.&#160;[15]&#160;What&#160;will&#160;be&#160;the&#160;smallest&#160;number&#160;of&#160;cores,&#160;of&#160;any 5 type,&#160;that&#160;gives&#160;the&#160;best&#160;speedup compared&#160;to&#160;using&#160;a&#160;single&#160;core&#160;of&#160;type&#160;1?&#160;You&#160;can&#160;use&#160;a mix&#160;of&#160;any&#160;cores&#160;(e.g.&#160;two&#160;cores of&#160;type&#160;1&#160;and&#160;one&#160;core&#160;of&#160;type&#160;2,&#160;etc).&#160;In&#160;your&#160;solution, indicate&#160;which&#160;task&#160;will&#160;run&#160;on which&#160;core,&#160;the&#160;total&#160;number&#160;of&#160;cores&#160;you&#160;will&#160;use&#160;for&#160;each type,&#160;the&#160;total&#160;execution&#160;times (for&#160;parallel&#160;version&#160;and&#160;the&#160;sequential&#160;version&#160;running&#160;on core&#160;of&#160;type&#160;1),&#160;and&#160;the speedup&#160;(relative&#160;to&#160;sequential&#160;execution&#160;on&#160;core&#160;of&#160;type 1). d.&#160;[10]&#160;Suppose&#160;we&#160;use&#160;only&#160;cores&#160;of&#160;type&#160;1.&#160;What&#160;is&#160;the smallest&#160;number&#160;of&#160;cores&#160;to&#160;get the&#160;highest&#160;speedup?&#160;Calculate&#160;that&#160;speedup.&#160;Then,&#160;if you&#160;are&#160;allowed&#160;to&#160;remove&#160;only&#160;one arrow&#160;from&#160;the&#160;DAG,&#160;while&#160;keeping&#160;the&#160;DAG&#160;a&#160;legal&#160;one, what&#160;will&#160;be&#160;that&#160;arrow&#160;to&#160;give a&#160;better&#160;speedup&#160;than&#160;the&#160;one&#160;you&#160;just&#160;calculated?&#160;If&#160;there are&#160;several&#160;solutions,&#160;pick&#160;one solution,&#160;and&#160;calculate&#160;the&#160;new&#160;speedup.&#160;If&#160;there&#160;are&#160;no solutions,&#160;state&#160;so,&#160;and&#160;give&#160;no more&#160;than&#160;two&#160;lines&#160;of&#160;explanation&#160;as&#160;to&#160;why&#160;there&#160;is&#160;no solution. Problem&#160;2 a.&#160;[5]&#160;For&#160;each&#160;one&#160;of&#160;the&#160;following&#160;designs,&#160;indicate&#160;whether it&#160;is&#160;SISD,&#160;SIMD,&#160;MISD, or&#160;MIMD.&#160;No&#160;justification&#160;needed.&#160;Note:&#160;If&#160;the&#160;design&#160;fits more&#160;than&#160;one&#160;category,&#160;then 6 pick&#160;the&#160;more&#160;general&#160;one.&#160;For&#160;example,&#160;MIMD&#160;can&#160;exe- cute&#160;as&#160;SIMD&#160;if&#160;all&#160;the instructions&#160;are&#160;the&#160;same.&#160;The&#160;more&#160;general&#160;is&#160;MIMD&#160;so pick&#160;MIMD&#160;not&#160;SIMD. 1.&#160;single&#160;core&#160;with&#160;superscalar&#160;capability&#160;but&#160;without speculative&#160;execution&#160;and without&#160;hyperthreading&#160;technology 2.&#160;single&#160;core&#160;with&#160;superscalar&#160;capability&#160;and&#160;speculative execution&#160;but&#160;without hyperthreading&#160;technology 3.&#160;single&#160;core&#160;with&#160;superscalar&#160;capability,&#160;speculative&#160;ex- ecution,&#160;and&#160;hyperthreading technology 5.&#160;multicore&#160;chip&#160;where&#160;some&#160;cores&#160;have&#160;pipelining&#160;only while&#160;other&#160;cores&#160;have superscalar&#160;capability&#160;without&#160;hyperthreading&#160;technology b.&#160;[5]&#160;Indicate&#160;whether&#160;each&#160;statement&#160;below&#160;is&#160;true&#160;(T) or&#160;false&#160;(F).&#160;No&#160;justification needed. 2.&#160;In&#160;a&#160;core&#160;with&#160;hyperthreading&#160;technology,&#160;instructions can&#160;come&#160;from&#160;different threads&#160;belonging&#160;to&#160;the&#160;same&#160;process&#160;but&#160;not&#160;from&#160;threads belonging&#160;to&#160;different processes. 3.&#160;MISD&#160;is&#160;implemented&#160;in&#160;real&#160;life&#160;in&#160;GPUs&#160;even&#160;though multicore&#160;can&#160;do&#160;the&#160;same job. 7 4.&#160;If&#160;we&#160;have&#160;two&#160;processes,&#160;with&#160;one&#160;thread&#160;each,&#160;execut- ing&#160;on&#160;a&#160;shared&#160;memory machine,&#160;there&#160;is&#160;no&#160;coherence&#160;overhead&#160;that&#160;can&#160;result from&#160;their&#160;execution. 5.&#160;If&#160;we&#160;have&#160;two&#160;processes,&#160;with&#160;multiple&#160;threads&#160;each, executing&#160;on&#160;a&#160;shared memory&#160;machine,&#160;there&#160;is&#160;no&#160;coherence&#160;overhead&#160;that&#160;can result&#160;from&#160;their execution. c.&#160;[5]&#160;If&#160;we&#160;have&#160;a&#160;multicore&#160;processor&#160;with&#160;eight&#160;cores, and&#160;two-way&#160;hyperthreading your&#160;answer&#160;with&#160;no&#160;more&#160;than&#160;two&#160;sentences. Problem&#160;3 a.&#160;Suppose&#160;you&#160;have&#160;an&#160;algorithm&#160;with&#160;four&#160;tasks&#160;that can&#160;be&#160;executed&#160;in&#160;parallel. 1.&#160;[6]&#160;What&#160;are&#160;the&#160;characteristics&#160;of&#160;those&#160;tasks&#160;that&#160;can make&#160;you&#160;decide&#160;to implement&#160;the&#160;program&#160;as&#160;one&#160;process&#160;with&#160;four&#160;threads as&#160;opposed&#160;to&#160;four processes&#160;with&#160;one&#160;thread&#160;each?&#160;State&#160;two&#160;characteristics to&#160;get&#160;full&#160;credit. 2.&#160;[4]&#160;With&#160;four&#160;parallel&#160;tasks,&#160;it&#160;may&#160;seem&#160;that&#160;four&#160;cores will&#160;give&#160;the&#160;best&#160;speedup over&#160;sequential&#160;code.&#160;However,&#160;there&#160;may&#160;be&#160;cases&#160;where less&#160;than&#160;four&#160;cores&#160;can give&#160;the&#160;same&#160;speedup&#160;as&#160;the&#160;four&#160;cores.&#160;Give&#160;a&#160;brief description&#160;of&#160;such&#160;a&#160;case&#160;in no&#160;more&#160;than&#160;2-3&#160;lines. 8 b.&#160;[4]&#160;If&#160;we&#160;have&#160;two&#160;implementations&#160;of&#160;the&#160;same&#160;algo- rithm&#160;and&#160;we&#160;found&#160;that&#160;one implementation&#160;has&#160;higher&#160;efficiency&#160;than&#160;the&#160;other.&#160;Does that&#160;always&#160;mean&#160;that&#160;the implementation&#160;with&#160;higher&#160;efficiency&#160;will&#160;always&#160;be&#160;faster? Justify&#160;in&#160;two&#160;sentences. c.&#160;We&#160;have&#160;two&#160;different&#160;implementations&#160;of&#160;the&#160;same algorithm.&#160;The&#160;first implementation&#160;has&#160;one&#160;million&#160;instructions&#160;where&#160;half&#160;of them&#160;are&#160;floating&#160;point instructions,&#160;and&#160;the&#160;other&#160;half&#160;are&#160;integer&#160;instructions. The&#160;second&#160;implementation&#160;has two&#160;million&#160;instructions&#160;where&#160;all&#160;of&#160;them&#160;are&#160;integer&#160;in- structions.&#160;Suppose&#160;a&#160;floatingpoint&#160;instruction&#160;takes&#160;10 cycles&#160;while&#160;an&#160;integer&#160;instruction&#160;takes&#160;one&#160;cycle.&#160;We execute these&#160;two&#160;implementations&#160;on&#160;a&#160;2GHz&#160;machine.&#160;Assume single&#160;core&#160;processor,&#160;where&#160;this core&#160;is&#160;SISD. 4.&#160;[8]&#160;State&#160;which&#160;implementation&#160;is&#160;better&#160;based&#160;on&#160;each of&#160;the&#160;following measurements:&#160;instruction&#160;count,&#160;MIPS,&#160;CPI,&#160;and&#160;execu- tion&#160;time. Problem&#160;4 For&#160;problem&#160;4,&#160;assume&#160;we&#160;have&#160;one&#160;communicator:&#160;MPI_COMM_WORLD. Suppose&#160;we&#160;have&#160;four&#160;processes.&#160;Each&#160;process&#160;has&#160;two arrays,&#160;of&#160;five&#160;integers&#160;each,&#160;A and&#160;B.&#160;B&#160;is&#160;declared&#160;as&#160;int&#160;B[5]&#160;but&#160;is&#160;not&#160;initialized&#160;and 9 A&#160;is&#160;initialized&#160;as&#160;follows: process&#160;0:&#160;int&#160;A[5]&#160;=&#160;{1,&#160;2,&#160;3,&#160;4,&#160;5}; process&#160;1:&#160;int&#160;A[5]&#160;=&#160;{11,&#160;12,&#160;13,&#160;14,&#160;15}; process&#160;2:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10}; process&#160;3:&#160;int&#160;A[5]&#160;=&#160;{16,&#160;17,&#160;18,&#160;19,&#160;20}; a.&#160;[3]&#160;Write&#160;one&#160;MPI&#160;command&#160;that,&#160;if&#160;executed&#160;by&#160;all the&#160;four&#160;processes,&#160;the&#160;B&#160;arrays&#160;at each&#160;process&#160;will&#160;be: process&#160;0:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50}; process&#160;1:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50}; process&#160;2:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50}; process&#160;3:&#160;int&#160;B[5]&#160;=&#160;{34,&#160;38,&#160;42,&#160;46,&#160;50}; b.&#160;[3]&#160;Write&#160;one&#160;MPI&#160;command&#160;that,&#160;if&#160;executed&#160;by&#160;all the&#160;four&#160;processes,&#160;the&#160;A&#160;arrays&#160;at each&#160;process&#160;will&#160;be: process&#160;0:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10}; process&#160;1:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10}; process&#160;2:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10}; process&#160;3:&#160;int&#160;A[5]&#160;=&#160;{6,&#160;7,&#160;8,&#160;9,&#160;10}; c.&#160;[4]&#160;Why&#160;MPI_Bcast()&#160;does&#160;not&#160;have&#160;an&#160;argument&#160;for the&#160;tag&#160;in&#160;a&#160;way&#160;similar&#160;to MPI_send()?"
  },
  "differences": {
    "fontSizes": {
      "original": [
        21,
        18,
        17,
        15,
        13,
        10
      ],
      "generated": [
        26,
        18,
        15
      ],
      "missing": [
        21,
        17,
        13,
        10
      ],
      "extra": [
        26
      ],
      "match": false
    },
    "colors": {
      "original": [
        "#000000",
        "#ff0000"
      ],
      "generated": [
        "#000000"
      ],
      "missing": [
        "#ff0000"
      ],
      "extra": [],
      "match": false
    },
    "elements": {
      "original": 173,
      "generated": 102,
      "difference": -71,
      "ratio": "0.59"
    },
    "structure": {
      "lengthRatio": "0.72",
      "textContentRatio": "0.80",
      "positioningMatch": false
    }
  }
}