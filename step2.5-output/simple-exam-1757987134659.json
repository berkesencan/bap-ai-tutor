[
  {
    "id": "Q1A",
    "text": "Problem 1 (2 points) If you create a main() routine that calls twice, i.e., if it includes the following code: Assuming all calls succeed, draw a process tree similar to that of Fig. 3.8 (page 116) in your textbook, clearly indicating the values of x and y for each process in the tree (i.e., whether 0, -11, -22, or larger than 0). Note that the process tree should only have one node for each process and thus the number of nodes should be equal to the number of processes. The process tree should be a snapshot just after all forks completed but before any process exists. Each line/arrow in the process tree diagram shall represent a creation of a process, or alternatively a parent/child relationship.",
    "rawLatex": "\\section*{Problem 1 (2 points)}\n\nIf you create a main() routine that calls \\texttt{fork()} twice, i.e., if it includes the following code:\n\n\\texttt{pid\\_t x=-11, y=-22;}\\\\\n\\texttt{x = fork();}\\\\\n\\texttt{if(x==0) y = fork();}\\\\\n\nAssuming all \\texttt{fork()} calls succeed, draw a process tree similar to that of Fig. 3.8 (page 116) in your textbook, clearly indicating the values of x and y for each process in the tree (i.e., whether 0, -11, -22, or larger than 0). Note that the process tree should only have one node for each process and thus the number of nodes should be equal to the number of processes. The process tree should be a snapshot just after all forks completed but before any process exists. Each line/arrow in the process tree diagram shall represent a creation of a process, or alternatively a parent/child relationship.",
    "points": null
  },
  {
    "id": "Q1B",
    "text": "Problem 2 (4 points) Write a C program that creates the following process tree: [CODE SNIPPET] A / \\ B C / \\ D E [/CODE SNIPPET] Each process should print its own process ID and the PID of its parent. Assume that process A is the initial process.",
    "rawLatex": "\\section*{Problem 2 (4 points)}\n\nWrite a C program that creates the following process tree:\n\n\\begin{verbatim}\n      A\n     / \\\n    B   C\n   / \\\n  D   E\n\\end{verbatim}\n\nEach process should print its own process ID and the PID of its parent.  Assume that process A is the initial process.",
    "points": null
  }
]